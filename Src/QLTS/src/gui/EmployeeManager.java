package gui;

import Controller.EmployeeDAO;
import Model.Employee;
import java.awt.Dimension;
import java.awt.Graphics;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import sun.invoke.empty.Empty;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Hiep
 */
public class EmployeeManager extends javax.swing.JFrame {
    

    
    ResultSet rs, rsSearch;
    Statement st;
    Vector vec, rowTen;
    PreparedStatement ps, psSearch;
    DefaultTableModel tblModel;
    server.DBHelper db = new server.DBHelper();
    Connection con;
    SimpleDateFormat ft = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat ftError = new SimpleDateFormat("yyyy/MM/dd");
    SetImage img = new SetImage();
    Date now = new Date();

    public EmployeeManager() {
        initComponents();
        btnDelete.setEnabled(false);
        btnEdit.setEnabled(false);
        btnLuu.setEnabled(false);
        tblModel = new DefaultTableModel();
        tblModel.addColumn("Tài khoản");

        tblModel.addColumn("Họ và tên");
        tblModel.addColumn("Giới tính");
        tblModel.addColumn("Ngày sinh");
        tblModel.addColumn("Số điện thoại");
        tblModel.addColumn("Email");
        tblModel.addColumn("Địa chỉ");
        tblModel.addColumn("Hình ảnh");

        tblEmp.setModel(tblModel);
        loadData();

        btnAdd.setSize(25, 25);
        new SetImage().setImageButton(btnAdd, "image//manageradd.png");
        btnReset.setSize(23, 23);
        new SetImage().setImageButton(btnReset, "image//managerrefresh.png");
        btnDelete.setSize(28, 28);
        new SetImage().setImageButton(btnDelete, "image//managerdel.png");
        btnEdit.setSize(30, 30);
        new SetImage().setImageButton(btnEdit, "image//managerfix.png");
        btnClose.setSize(25, 25);
        new SetImage().setImageButton(btnClose, "image//managerclose.png");
        lbSearch.setSize(25, 25);
        new SetImage().setImageLabel(lbSearch, "image//search-512.png");
        btnBrowse.setSize(25, 25);
        new SetImage().setImageButton(btnBrowse, "image//browse.png");
       
        btnLuu.setSize(25, 25);
        new SetImage().setImageButton(btnLuu, "image//managerluu.png");

    }
    
    private void gioiTinh(String s) {
        if (s.equals("Nam")) {
            cbxGender.setSelectedIndex(0);
        } else {
            cbxGender.setSelectedIndex(1);
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel(){
            ImageIcon icon = new ImageIcon("image//bkgr.jpg");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmp = new javax.swing.JTable(){ImageIcon icon = new ImageIcon("image//back_glossy.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }

        };
        jPanel1 = new javax.swing.JPanel(){
            ImageIcon icon = new ImageIcon("image//back_glossy.png");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        lb = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tarAddress = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        txtPass = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        txtPass1 = new javax.swing.JPasswordField();
        Name = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        txtBirthday = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtHinh = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        lbHinh = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lbSearch = new javax.swing.JLabel();
        btnLuu = new javax.swing.JButton();
        cbxGender = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý nhân viên");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText(" QUẢN LÍ NHÂN VIÊN");

        tblEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblEmp.getTableHeader().setReorderingAllowed(false);
        tblEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmp);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lb.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lb.setText("Tài khoản :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Mật khẩu : ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Giới tính : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Ngày sinh : ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Địa chỉ :");

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        tarAddress.setColumns(20);
        tarAddress.setRows(5);
        jScrollPane2.setViewportView(tarAddress);

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnClose.setText("Đóng");
        btnClose.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("Xác nhận mật khẩu :");

        txtPass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPass1ActionPerformed(evt);
            }
        });

        Name.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Name.setText("Họ và Tên :");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setText("Email :");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        txtBirthday.setDateFormatString("dd/MM/yyyy");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setText("Số điện thoại :");

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setText("File :");

        txtHinh.setEnabled(false);
        txtHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHinhActionPerformed(evt);
            }
        });

        btnBrowse.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBrowse.setText("Browse...");
        btnBrowse.setToolTipText("");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        lbSearch.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbSearch.setText("Tìm Kiếm Nhân Viên");

        btnLuu.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        cbxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(lbHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(Name)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(334, 334, 334)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cbxGender, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(lb)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(txtUser)
                    .addComponent(txtPass1)
                    .addComponent(txtEmail))
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel16)
                .addGap(37, 37, 37)
                .addComponent(txtHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Name)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lb)
                                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtHinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(581, 581, 581)
                .addComponent(jLabel7))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseClicked
        btnDelete.setEnabled(true);
        btnEdit.setEnabled(true);
        btnLuu.setEnabled(false);
        txtUser.setEnabled(false);
        txtPass.setEnabled(false);
        txtPass1.setEnabled(false);
        txtEmail.setEnabled(false);
        tarAddress.setEnabled(false);
        txtName.setEnabled(false);
        txtPhone.setEnabled(false);
        txtBirthday.setEnabled(false);
        txtHinh.setEnabled(false);
        cbxGender.setEnabled(false);
        btnBrowse.setEnabled(false);
        int line = tblEmp.getSelectedRow();
        try {
            String sql = "select Password from Employee where UsernameEmp=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, (String) tblModel.getValueAt(line, 0));
            rs = ps.executeQuery();
            if (rs.next()) {
                txtPass.setText(rs.getString(1));
                txtPass1.setText(rs.getString(1));
            }
            String username = (String) tblModel.getValueAt(line, 0);
            String name = (String) tblModel.getValueAt(line, 1);
            String sex = (String) tblModel.getValueAt(line, 2);
            Date birthday = ft.parse((String) tblModel.getValueAt(line, 3));
            String phone = (String) tblModel.getValueAt(line, 4);
            String email = (String) tblModel.getValueAt(line, 5);
            String address = (String) tblModel.getValueAt(line, 6);
            String image = (String) tblModel.getValueAt(line, 7);
            txtUser.setText(username);
            txtName.setText(name);
            txtBirthday.setDate(birthday);
            txtPhone.setText(phone);
            txtEmail.setText(email);
            tarAddress.setText(address);
            txtHinh.setText(image);
            img.setImageLabel(lbHinh, "image//" + image);
           
        } catch (ParseException e) {
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblEmpMouseClicked

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn lưu ?");
        while (true) {
            if (txtPass.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() > 18) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được lớn hơn 18 kí tự ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() < 6) {
                JOptionPane.showMessageDialog(this, "Mật khẩu phải lớn hơn 6 kí tự  ! ");
                txtPass.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtPass1.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu không được để trống !");
                txtPass1.grabFocus();
                return;
            } else if (!txtPass1.getText().trim().equals(txtPass.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu phải giống mật khẩu !");
                txtPass1.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtName.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Họ và tên không được để trống !");
                txtName.grabFocus();
                return;
            } else if (txtName.getText().trim().length() > 30) {
                JOptionPane.showMessageDialog(this, "Họ và tên không được lớn hơn 30 kí tự ! ");
                txtName.grabFocus();
                return;
            }
            {
                break;
            }

        }
        while (true) {
            if (ftError.format(txtBirthday.getDate()).compareTo("2000/01/01") >= 0) {
                JOptionPane.showMessageDialog(this, "Nhân viên phải đủ 18 tuổi ! ");
                txtBirthday.grabFocus();
                return;
            } else {
                break;
            }

        }
        if (!txtPhone.getText().trim().equals("")) {
            while (true) {
                if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại gồm 10-11 số.");
                    txtPhone.grabFocus();
                    return;
                } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                    JOptionPane.showMessageDialog(this, "Không đúng định dạng số điện thoại ! Ví dụ : 012345678x hoặc 098765432x");
                    txtPhone.grabFocus();
                    return;
                } else {
                    break;
                }

            }
        }
        if (!txtEmail.getText().trim().equals("")) {
            while (true) {
                if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng Email ! Ví dụ : (abcdef@gmail.com) ");
                txtEmail.grabFocus();
                return;
            } else {
                break;
            }
        }
        }
        while (true) {
            if (tarAddress.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống !");
                tarAddress.grabFocus();
                return;
            } else if (tarAddress.getText().trim().length() > 100) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được lớn hơn 100 kí tự ! ");
                tarAddress.grabFocus();
                return;
            }
            {
                break;
            }

        }
        while (true) {
            if (txtHinh.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Hình ảnh không được để trống !");
                txtHinh.grabFocus();
                return;
            } else {
                break;
            }
        }

        try {
            String date = ft.format(txtBirthday.getDate());
            Employee empl = new Employee();
            empl.setUserNameEmp(txtUser.getText());
            empl.setPassWord(txtPass.getText());
            empl.setNameEmp(txtName.getText());
            empl.setGender(cbxGender.getSelectedItem().toString());
            empl.setBirthDay(date);
            empl.setPhone(txtPhone.getText());
            empl.setEmail(txtEmail.getText());
            empl.setAddress(tarAddress.getText());
            empl.setHinh(txtHinh.getText());
            EmployeeDAO emp = new EmployeeDAO();
            emp.updateAccount(empl);
            JOptionPane.showMessageDialog(null, "Lưu thành công");
            tblModel.getDataVector().removeAllElements();
            loadData();
            btnResetActionPerformed(evt);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Chỉnh sửa nhân viên không thành công");
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        tblModel.getDataVector().removeAllElements();
        try {
            ps = con.prepareStatement("Select * from Employee where NameEmp like ?");
            ps.setString(1, "%" + txtSearch.getText() + "%");
            rs = ps.executeQuery();
            if (!rs.next()) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy nhân viên ");
                loadData();
            } else {
                ps = con.prepareStatement("Select * from Employee where NameEmp like ?");
                ps.setString(1, "%" + txtSearch.getText() + "%");
                rs = ps.executeQuery();
                while (rs.next()) {
                    vec = new Vector();
                    vec.add(rs.getString(1));
                    //                    vec.add(rs.getString(2));
                    vec.add(rs.getString(3));
                    vec.add(rs.getString(4));
                    vec.add(rs.getString(5));
                    vec.add(rs.getString(6));
                    vec.add(rs.getString(7));
                    vec.add(rs.getString(8));
                    vec.add(rs.getString(9));

                    tblModel.addRow(vec);
                }
                tblEmp.setModel(tblModel);
            }
        } catch (SQLException ex) {

            Logger.getLogger(EmployeeManager.class
                .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser("image");
        FileFilter filter = new FileNameExtensionFilter("Image file", "gjf", "jpg", "png");

        fileChooser.setFileFilter(filter);
        fileChooser.setMultiSelectionEnabled(false);

        int action = fileChooser.showOpenDialog(this);
        if (action == JFileChooser.APPROVE_OPTION) {
            while (true) {
                if (!fileChooser.getSelectedFile().getName().matches("([^\\s]+(\\.(?i)(jpg|png|gif|bmp))$)")) {
                    JOptionPane.showMessageDialog(null, "Định dạng file hình đuôi phải là GIF, JPG, PNG !");
                    return;
                } else {
                    break;
                }
            }
            String imgFile = fileChooser.getSelectedFile().getName();
            txtHinh.setText(imgFile);
            img.setImageLabel(lbHinh, "image//" + imgFile);
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void txtHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHinhActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtUser.setText("");
        txtName.setText("");
        txtEmail.setText("");
        txtPass.setText("");
        txtPass1.setText("");
        txtPhone.setText("");
        tarAddress.setText("");
        img.setImageLabel(lbHinh, "image//trongsuot.png");
        txtHinh.setText("");
        cbxGender.setEnabled(true);
        btnDelete.setEnabled(false);
        btnEdit.setEnabled(false);
        btnAdd.setEnabled(true);
        btnLuu.setEnabled(false);
        txtUser.setEnabled(true);
        tblModel.getDataVector().removeAllElements();

        txtPass.setEnabled(true);
        txtPass1.setEnabled(true);
        txtEmail.setEnabled(true);
        tarAddress.setEnabled(true);
        txtName.setEnabled(true);
        txtPhone.setEnabled(true);
        txtBirthday.setEnabled(true);
        txtHinh.setEnabled(true);
        
        btnBrowse.setEnabled(true);

        loadData();
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtPass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPass1ActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        txtUser.setEnabled(false);
        btnDelete.setEnabled(true);
        btnEdit.setEnabled(true);
        btnAdd.setEnabled(false);
        btnLuu.setEnabled(true);
        btnBrowse.setEnabled(true);
        txtPass.setEnabled(true);
        txtPass1.setEnabled(true);
        txtEmail.setEnabled(true);
        tarAddress.setEnabled(true);
        txtName.setEnabled(true);
        txtPhone.setEnabled(true);
        txtBirthday.setEnabled(true);
        txtHinh.setEnabled(true);
        cbxGender.setEnabled(true);
        btnEdit.setEnabled(false);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn xóa ?");
        while (true) {            
            try {
            String date = ft.format(txtBirthday.getDate());
            Employee empl = new Employee();
            empl.setUserNameEmp(txtUser.getText());
            empl.setPassWord(txtPass.getText());
            empl.setNameEmp(txtName.getText());
            empl.setGender(cbxGender.getSelectedItem().toString());
            empl.setBirthDay(date);
            empl.setPhone(txtPhone.getText());
            empl.setEmail(txtEmail.getText());
            empl.setAddress(tarAddress.getText());
            empl.setHinh(txtHinh.getText());
            EmployeeDAO emp = new EmployeeDAO();
            emp.deleteAccount(empl);
            JOptionPane.showMessageDialog(null, "Xóa Nhân Viên Thành Công");
            tblModel.getDataVector().removeAllElements();
            loadData();
            btnResetActionPerformed(evt);
            } catch (Exception e) {
            }
               
             break  ;  
            
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm nhân viên mới  ?");
 
        while (true) {
            try {
                ps = con.prepareStatement("select * from Employee where UsernameEmp = ?");
                ps.setString(1, txtUser.getText().trim());
                rs = ps.executeQuery();
                if (txtUser.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(this, "Tài khoản không được để trống !");
                    txtUser.grabFocus();
                    return;
                } else if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Tài khoản này đã tồn tại !");
                    txtUser.grabFocus();
                    return;
                } else if (txtUser.getText().trim().length() > 30) {
                    JOptionPane.showMessageDialog(this, "Tài khoản không được lớn hơn 30 kí tự ! ");
                    txtUser.grabFocus();
                    return;
                } else if (txtUser.getText().trim().length() < 6) {
                    JOptionPane.showMessageDialog(this, "Tài khoản phải lớn hơn 6 kí tự  ! ");
                    txtUser.grabFocus();
                    return;
                } else if (!txtUser.getText().trim().matches("[A-Za-z0-9]+")) {
                    JOptionPane.showMessageDialog(this, "Tài khoản phải có chữ và số ! ");
                    txtUser.grabFocus();
                    return;
                } else {
                    break;
                }
            } catch (Exception e) {
            }

        }
        while (true) {

            if (txtPass.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() > 18) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được lớn hơn 18 kí tự ! ");
                txtPass.grabFocus();
                return;
            } else if (txtPass.getText().trim().length() < 6) {
                JOptionPane.showMessageDialog(this, "Mật khẩu phải lớn hơn 6 kí tự  ! ");
                txtPass.grabFocus();
                return;
            } else if (!txtPass.getText().matches("[A-Za-z0-9]+")) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được có khoảng cách và kí tự đặc biệt ! ");
                txtPass.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtPass1.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu không được để trống !");
                txtPass1.grabFocus();
                return;
            } else if (!txtPass1.getText().trim().equals(txtPass.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu phải giống mật khẩu !");
                txtPass1.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtName.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Họ và tên không được để trống !");
                txtName.grabFocus();
                return;
            } else if (txtName.getText().trim().length() > 30) {
                JOptionPane.showMessageDialog(this, "Tên không được lớn hơn 30 kí tự ! ");
                txtName.grabFocus();
                return;
            }
            {
                break;
            }

        }
        while (true) {
            if (ftError.format(txtBirthday.getDate()).compareTo("2000/01/01") >= 0) {
                JOptionPane.showMessageDialog(this, "Nhân viên phải đủ 18 tuổi !");
                txtBirthday.grabFocus();
                return;
            } else {
                break;
            }

        }
        if (!txtPhone.getText().trim().equals("")) {
            while (true) {
                if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại gồm 10-11 số.");
                    txtPhone.grabFocus();
                    return;
                } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                    JOptionPane.showMessageDialog(this, "Không đúng định dạng số điện thoại ! Ví dụ : 012345678x hoặc 098765432x");
                    txtPhone.grabFocus();
                    return;
                } else {
                    break;
                }

            }
        }
        if (!txtEmail.getText().trim().equals("")) {
            while (true) {
                if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng Email ! Ví dụ : (abcdef@gmail.com) ");
                txtEmail.grabFocus();
                return;
            } else {
                break;
            }
        }
        }
        while (true) {
            if (tarAddress.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống !");
                tarAddress.grabFocus();
                return;
            } else if (tarAddress.getText().trim().length() > 100) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được lớn hơn 100 kí tự ! ");
                tarAddress.grabFocus();
                return;
            } else {
                break;
            }

        }
        while (true) {
            if (txtHinh.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Hình ảnh không được để trống !");
                txtHinh.grabFocus();
                return;
            } else {
                break;
            }

        }
        try {
            String date = ft.format(txtBirthday.getDate());
            Employee empl = new Employee();
            empl.setUserNameEmp(txtUser.getText());
            empl.setPassWord(txtPass.getText());
            empl.setNameEmp(txtName.getText());
            empl.setGender(cbxGender.getSelectedItem().toString());
            empl.setBirthDay(date);
            empl.setPhone(txtPhone.getText());
            empl.setEmail(txtEmail.getText());
            empl.setAddress(tarAddress.getText());
            empl.setHinh(txtHinh.getText());
            EmployeeDAO emp = new EmployeeDAO();
            emp.addAccount(empl);
            JOptionPane.showMessageDialog(null, "Thêm nhân viên thành công");
            tblModel.getDataVector().removeAllElements();
            loadData();
            btnResetActionPerformed(evt);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Thêm nhân viên thất bại");
        }
        
       
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed
    NumberFormat nft = new DecimalFormat("#,###");

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnReset;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxGender;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lbHinh;
    private javax.swing.JLabel lbSearch;
    private javax.swing.JTextArea tarAddress;
    private javax.swing.JTable tblEmp;
    private com.toedter.calendar.JDateChooser txtBirthday;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHinh;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtPass1;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        con = db.getCon();
        try {
            ps = con.prepareStatement("Select * from Employee");
            rs = ps.executeQuery();
            while (rs.next()) {
                vec = new Vector();
                vec.add(rs.getString(1));
                vec.add(rs.getString(3));
                vec.add(rs.getString(4));
                vec.add(rs.getString(5));
                vec.add(rs.getString(6));
                vec.add(rs.getString(7));
                vec.add(rs.getString(8));
                vec.add(rs.getString(9));

                tblModel.addRow(vec);
            }
            tblEmp.setModel(tblModel);
        } catch (SQLException ex) {

            Logger.getLogger(EmployeeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
